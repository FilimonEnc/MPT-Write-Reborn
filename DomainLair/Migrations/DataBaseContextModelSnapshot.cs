// <auto-generated />
using DomainLair.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DomainLair.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.8");

            modelBuilder.Entity("DomainLair.DataBase.Entity.GroupEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("DomainLair.DataBase.Entity.GroupTeacherEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Group_IdId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Teacher_IdId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Group_IdId");

                    b.HasIndex("Teacher_IdId");

                    b.ToTable("GroupTeacher");
                });

            modelBuilder.Entity("DomainLair.DataBase.Entity.SubjectEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("DomainLair.DataBase.Entity.SubjectTeacherEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Subject_IdId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Teacher_IdId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Subject_IdId");

                    b.HasIndex("Teacher_IdId");

                    b.ToTable("SubjectTeacher");
                });

            modelBuilder.Entity("DomainLair.DataBase.Entity.TeacherEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Teacher");
                });

            modelBuilder.Entity("DomainLair.DataBase.Entity.GroupTeacherEntity", b =>
                {
                    b.HasOne("DomainLair.DataBase.Entity.GroupEntity", "Group_Id")
                        .WithMany()
                        .HasForeignKey("Group_IdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainLair.DataBase.Entity.TeacherEntity", "Teacher_Id")
                        .WithMany()
                        .HasForeignKey("Teacher_IdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group_Id");

                    b.Navigation("Teacher_Id");
                });

            modelBuilder.Entity("DomainLair.DataBase.Entity.SubjectTeacherEntity", b =>
                {
                    b.HasOne("DomainLair.DataBase.Entity.SubjectEntity", "Subject_Id")
                        .WithMany()
                        .HasForeignKey("Subject_IdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainLair.DataBase.Entity.TeacherEntity", "Teacher_Id")
                        .WithMany()
                        .HasForeignKey("Teacher_IdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject_Id");

                    b.Navigation("Teacher_Id");
                });
#pragma warning restore 612, 618
        }
    }
}
